plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    //id 'com.google.gms.google-services'
    id("kotlin-kapt")
    id("com.google.dagger.hilt.android")
    id 'com.google.devtools.ksp' version "$ksp_version"
    id 'com.google.gms.google-services'
    id("de.mannodermaus.android-junit5") version "1.8.2.1"
 //   id 'com.google.gms.google-services'

}

android {
    namespace 'com.example.dollarschat'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.dollarschat"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
//    kapt {
//        correctErrorTypes = true
//    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter'
//    testImplementation 'org.junit.jupiter:junit-jupiter'
//    testImplementation 'org.junit.jupiter:junit-jupiter'
//    testImplementation 'junit:junit:4.12'
//    testImplementation 'junit:junit:4.12'
//    testImplementation 'junit:junit:4.12'
    def nav_version = "2.5.3"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.2.0'
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.3'
    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.18.0"

    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    implementation "androidx.compose.runtime:runtime-livedata:$compose_ui_version"

    //hitl
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"

    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")


    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation platform('com.google.firebase:firebase-bom:31.2.3')
    implementation 'com.google.firebase:firebase-database-ktx:20.1.0'

    // fire base storage
    implementation 'com.google.firebase:firebase-storage-ktx:20.1.0'
    //download http images
    implementation 'com.firebaseui:firebase-ui-storage:7.2.0'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.3'

    def room_version = "2.5.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //val room_version = "2.5.0"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin Symbol Processing (KSP)
    ksp("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // optional - RxJava2 support for Room
    implementation("androidx.room:room-rxjava2:$room_version")

    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:$room_version")

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:$room_version")

    // optional - Test helpers
    testImplementation("androidx.room:room-testing:$room_version")

    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:$room_version")

  //  def jUnitVersion = "5.8.2"
    def mockitoVersion = "4.0.0"
    // Required -- JUnit 4 framework
   // testImplementation "junit:junit:$jUnitVersion"
    // Optional -- Robolectric environment
   // testImplementation "androidx.test:core:$androidXTestVersion"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoVersion"
    // Optional -- Mockk framework
    //testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")

    // (Optional) If you also have JUnit 4-based tests
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")
}

